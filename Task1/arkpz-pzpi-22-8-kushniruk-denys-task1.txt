Міністерство освіти і науки України
Харківський національний університет радіоелектроніки
Кафедра програмної інженерії





Лабораторна робота № 1
з дисципліни «Аналіз та рефакторинг коду»








Виконав:									Перевірив:
ст. гр. ПЗПІ-22-8								ст. викладач. 
Кушнірук Денис 								Сокорчук І.П









Харків 2024

1 РОЗРОБКА VISION & SCOPE 
1.1 Мета роботи
Описати проєкт у форматі Vision & Scope. 
1.2 Хід роботи
1.2.1 Написати перший розділ, де неохідно описати актуальність проблем, які вирішує програмна система. Також описати інші аналогічні рішення, що вирішують ту ж саму проблему, або використовують ті ж самі методи вирішення завдань. Описати способи монетизації проєкту. 
1.2.2 Написати другий розділ, в якому описати призначення системи, вказати її головні функціональні можливості та бізнес-логіку проєкту. 
1.2.3 Написати третій розділ, в якому описати функції кожної з частин системи. 
1.2.4 Написати четвертий розділ, в якому вказати усі технології, які будуть використані у проєкті. 
     Висновок: Під час виконання лабораторної роботи було розкрито призначення програмної системи та описано проєкт у форматі Vision & Scope, що винесено у Додаток А.
 
Додаток А
 
Vision and Scope Document
Програмна система для 
автоматичного управління
 освітленням у приміщеннях
Версія 1.0 
Підготовлено Кушнірук Д. О.
Ст. гр. ПЗПІ-22-8
14.11.2024
 
Зміст
Журнал версій	4
1.	Бізнес вимоги	5
1.1	Передумови	5
1.2	Бізнес можливості	5
2.	Бачення рішення	7
2.1	Окреслення концепції	7
2.2	Основні особливості	7
2.2.1 Функціональність для користувачів	7
2.2.2 Функціональність для адміністраторів	8
3.	Сфера застосування та обмеження	8
3.1	Початковий випуск	8
3.1.1 Серверна частина	8
3.1.2 IoT-клієнт	9
3.2	Обсяг наступних випусків	9
3.2.1 Веб-кліент	9
3.2.2 Мобільний кліент	10
4.	Бізнес-контекст	10
4.1	Операційне середовище	10
5.	Список використаних джерел	11


Журнал версій
Назва	Дата	Причина змін	Версія
SLC System	14.11.2024		1.0

 
1.	Бізнес вимоги
1.1	Передумови
Сучасні системи освітлення часто залишаються ввімкненими без потреби, що спричиняє надмірне споживання енергії та збільшує витрати. Управління освітленням у великих приміщеннях є трудомістким, особливо за відсутності централізованої системи або автоматизації. Традиційні рішення не адаптовані до змін у графіку роботи чи потреб користувачів, що створює незручності. Також багато з них не відповідають сучасним екологічним стандартам через низьку енергоефективність. Крім того, відсутність інтеграції з іншими системами, такими як календарі чи IoT-пристрої, обмежує їх функціональність і зручність.
1.2	Бізнес можливості
Для розробки системи автоматичного управління освітленням було проаналізовано існуючі рішення на ринку. Кожен з аналогів має свої переваги та недоліки, які враховуються для створення конкурентоспроможного продукту.

1.	Philips Hue
Переваги:
-	Висока якість пристроїв, сумісність із голосовими асистентами (Alexa, Google Assistant).
-	Наявність мобільного додатку для дистанційного керування та налаштування графіку освітлення.
-	Підтримка сценаріїв для автоматизації роботи світла.
Недоліки:
-	Висока вартість обладнання.
-	Не завжди зручна інтеграція з іншими IoT-пристроями.

2.	Xiaomi Smart Lighting System
Переваги:
-	Доступна ціна.
-	Простота використання та налаштування через фірмовий додаток Mi Home.
-	  Інтеграція з екосистемою Xiaomi.
Недоліки:
-	Функціонал обмежений для складних сценаріїв автоматизації.
-	Залежність від хмарного сервісу, що може викликати затримки в управлінні.

3.	Lutron Caséta Wireless
Переваги:
-	Надійність роботи завдяки локальному управлінню без залежності від хмарних сервісів.
-	Інтеграція з популярними платформами для розумного будинку.
-	Зручне управління через фізичні пульти або додаток.
Недоліки:
-	Складність у встановленні для користувачів без технічних знань.
-	Обмежений вибір налаштувань для графіку освітлення.

Аналіз аналогів демонструє, що сучасні системи мають або високий рівень автоматизації за значну ціну, або обмежений функціонал у бюджетному сегменті. SLC System прагне поєднати функціональність, простоту використання та доступність, забезпечуючи інтеграцію з IoT-пристроями, календарями та надаючи користувачам повний контроль через додаток.
2.	Бачення рішення  
2.1	Окреслення концепції
Ця система автоматичного управління освітленням у приміщеннях призначена для створення енергоефективного та розумного середовища завдяки використанню IoT-датчиків і додатка для дистанційного керування. Вона забезпечить автоматичне ввімкнення та вимкнення світла відповідно до графіку та розкладу подій, зменшуючи енергоспоживання та забезпечуючи комфорт користувачів. У майбутньому це рішення допоможе будівлям ставати більш екологічними та ефективними, задовольняючи потреби як корпоративних, так і приватних клієнтів.
2.2	Основні особливості
Система підтримує дві основні ролі: користувачі (мешканці або працівники приміщення) та адміністратори.
2.2.1 Функціональність для користувачів
MF-1. Реєстрація та авторизація:
Користувачі можуть реєструватися через соціальні мережі. Сервер обробляє дані для створення облікового запису, зберігаючи інформацію про користувача. Після автентифікації користувач отримує доступ до особистого кабінету.
MF-2. Управління розкладом освітлення:
Користувачі можуть створювати розклади для автоматичного ввімкнення та вимкнення освітлення. Сервер зберігає дані розкладу та виконує команди на основі заданого часу.
MF-3. Віддалене управління освітленням:
Через мобільний додаток користувачі можуть змінювати стан освітлення в реальному часі. Сервер обробляє запити, передаючи команди на IoT-пристрої, які керують освітленням.
MF-4. Налаштування індивідуальних сценаріїв освітлення:
Користувачі можуть вибирати готові сценарії або створювати власні (наприклад, «Робота», «Відпочинок»). Сервер зберігає сценарії та активує їх за запитом користувача.
2.2.2 Функціональність для адміністраторів
MF-5. Управління користувачами:
Адміністратори можуть створювати, редагувати та видаляти облікові записи користувачів, призначати ролі та рівні доступу. Сервер обробляє всі операції, оновлюючи базу даних.
MF-6. Налаштування системи:
Адміністратори можуть встановлювати глобальні параметри системи, такі як стандартні розклади освітлення, правила доступу або умови роботи IoT-пристроїв.
MF-7. Моніторинг активності:
Сервер дозволяє адміністраторам переглядати активність користувачів, історію змін освітлення, а також звіти про несправності або збої в роботі системи.
3.	Сфера застосування та обмеження
3.1	Початковий випуск
3.1.1 Серверна частина
Серверна частина є основою для обробки всіх запитів та забезпечення функціональності програмної системи. Вона взаємодіє з базою даних, мобільними додатками, веб-інтерфейсами та IoT-пристроями для реалізації необхідних бізнес-логік.

 		Сервер обробляє запити на реєстрацію та авторизацію користувачів через соціальні мережі або електронну пошту. Дані зберігаються в базі даних, і після автентифікації користувач отримує доступ до свого особистого кабінету. Це забезпечує безпеку даних та доступу до функцій.

		Користувачі можуть створювати та налаштовувати розклади освітлення через мобільний додаток або веб-інтерфейс. Сервер обробляє ці дані, зберігаючи їх у базі даних, і ініціює відповідні команди для IoT-пристроїв у зазначений час.

 		Система буде локалізована для кількох мов, включаючи українську та англійську. Сервер забезпечить коректну роботу платформи для користувачів з різних країн, враховуючи специфіку систем мір і форматування текстових даних.
3.1.2 IoT-клієнт
IoT клієнт складається з пристроїв (наприклад, розумних ламп, датчиків руху та інших елементів), які виконують фізичні функції управління освітленням та взаємодіють із серверною частиною.
Кожен IoT пристрій може включати або вимикати освітлення та регулювати яскравість за командами від сервера. Усі зміни відразу відображаються в системі.
Користувачі можуть створювати спеціальні сценарії освітлення, наприклад, для роботи чи відпочинку. IoT пристрої виконують ці сценарії, змінюючи параметри освітлення за командою від сервера.
3.2	Обсяг наступних випусків
3.2.1 Веб-кліент
 Веб-клієнт надає доступ користувачам до всіх основних функцій системи через браузер.
Управління освітленням: Користувачі можуть переглядати та керувати станом освітлення в різних кімнатах або зонах через інтерфейс веб-сторінки.
Створення сценаріїв освітлення: Користувачі можуть налаштовувати різні сценарії освітлення для конкретних потреб, таких як «робочий» або «відпочинок», і застосовувати їх до кімнат чи зон.
3.2.2 Мобільний кліент
Мобільний додаток дозволяє користувачам керувати системою через смартфон або планшет, забезпечуючи доступність функцій на ходу.
Керування освітленням: Мобільний додаток дозволяє контролювати освітлення, включаючи можливість налаштування яскравості, вимикання та включення світла в будь-який час і з будь-якої локації.
Персоналізація сценаріїв: Додаток дозволяє користувачам створювати і редагувати сценарії освітлення на основі їхнього розкладу чи потреб.
4.	Бізнес-контекст
4.1	Операційне середовище
Для реалізації системи автоматизованого контролю освітлення буде використовуватися низка програмних засобів та інструментів для розробки, та підтримки проекту. Вибір технологій можна адаптувати залежно від потреб проекту, Firebase для бази даних, а також Next.js для фронтенду.
Backend (серверна частина):
Node.js: Платформа для запуску JavaScript на сервері, яка використовується для створення RESTful API для обміну даними між сервером і клієнтами.
Express.js: Фреймворк для Node.js, що дозволяє швидко створювати веб-сервери та обробляти HTTP-запити.

 
База даних:
Firebase Firestore: Реальний час, масштабована база даних від Google, яка інтегрується з іншими продуктами Firebase. Підходить для швидкої розробки та синхронізації даних в реальному часі між користувачами та пристроями.
Frontend (клієнтська частина):
Next.js: Фреймворк для React, що дозволяє створювати універсальні (серверно-рендеринговані) додатки, що оптимізують швидкість завантаження сторінок та SEO. Підходить для створення веб-додатків, які потребують кращої продуктивності.
Мобільний додаток:
React Native: Платформа для розробки мобільних додатків для iOS та Android за допомогою JavaScript та React.
Expo: Інструмент для полегшення розробки мобільних додатків на React Native без необхідності налаштовувати додаткові інструменти.
IoT-пристрої та їх програмування:
MQTT (Message Queuing Telemetry Transport): Протокол обміну повідомленнями між сервером і IoT пристроями, використовується для управління освітленням через віддалені пристрої.
Arduino: Мікроконтролер для створення IoT пристроїв, які керують освітленням і підключаються до сервера через MQTT.

5.	Список використаних джерел
1.	"IoT-Based Smart Lighting Systems: A Review" — стаття, що аналізує використання IoT для керування освітленням в розумних будівлях. Визначає ключові аспекти для розробки подібних систем.
2.	"Smart Building: Technologies and Applications" — книга, яка охоплює інновації в сфері розумних будівель, зокрема автоматизацію освітлення.
3.	"Introduction to Internet of Things (IoT)" — онлайн-курс, що пояснює основи IoT і його застосування в різних сферах, включаючи автоматичне управління освітленням.
4.	"Energy-Efficient Smart Lighting Systems for Office Buildings" — дослідження, яке вивчає енергозбереження за допомогою розумних систем освітлення в офісних приміщеннях.
5.	Офіційна документація Firebase для інтеграції IoT пристроїв у додатках: https://firebase.google.com/docs.


